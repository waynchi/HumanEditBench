def is_sum_of_four_squares(n):
    if n < 0:
        return False
    
    # Applying Lagrange's Four Square Theorem.
    # A number can be represented as a sum of four squares.
    # The algorithm checks if the number is expressible as
    # a sum of four squares using a brute force approach to 
    # check combinations of four integers.

    for a in range(int(n**0.5) + 1):
        for b in range(int(n**0.5) + 1):
            for c in range(int(n**0.5) + 1):
                for d in range(int(n**0.5) + 1):
                    if a**2 + b**2 + c**2 + d**2 == n:
                        return True
    return False

# Testing the function with some numbers.
test_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 23, 24]
results = {num: is_sum_of_four_squares(num) for num in test_numbers}

# Outputting the results
for num, can_be_expressed in results.items():
    print(f"{num} 可以表示为四个非零平方和: {can_be_expressed}")