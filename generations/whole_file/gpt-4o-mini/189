import torch
import torch.nn as nn

class SimpleConvNet1(nn.Module):
    def __init__(self, input_channels, num_classes):  # 修改构造函数参数
        super().__init__()

        self.conv1 = nn.Sequential(
            nn.Conv2d(input_channels, 32, 3),  # 使用输入通道
            nn.ReLU(),
            nn.MaxPool2d(2)
        )

        self.conv2 = nn.Sequential(
            nn.Conv2d(32, 64, 3),
            nn.ReLU(),
            nn.MaxPool2d(2)
        )

        self.flatten = nn.Flatten()

        # 计算 flattened_size
        self.flattened_size = 64 * 6 * 6  # 这里需要根据实际输入尺寸进行修改
        self.fc1 = nn.Sequential(
            nn.Linear(self.flattened_size, 512),
            nn.ReLU(),
            nn.Linear(512, num_classes)  # 使用 num_classes 参数
        )

    def forward(self, x):
        x = self.conv1(x)
        x = self.conv2(x)
        x = self.flatten(x)
        x = self.fc1(x)
        return x