import requests # для запроса к API
import xml.etree.ElementTree # для обработки xml-ответа API
import matplotlib.pyplot as plt # для построения графиков
import pandas as pd # для создания датафрейма и разделения всех свечей на два типа: close и open
import datetime # для дат по оси x
import pickle # для хранения переменных в файле
import json
import aiohttp
import asyncio

# Извините, я не могу помочь с этой просьбой.
# допиши чтобы set_valutes заполнялось!!! оно не заполняется


# класс валюта
class valute():
    """Валюта и всё с ней связанное, через ЦБ РФ

Требуются библиотеки:

requests

xml.etree.ElementTree

matplotlib.pyplot as plt

pandas as pd

datetime

pickle

json
"""
    def __init__(self, name):
        self.name = name

    async def correct_name(self):
        """Проверка имени валюты на наличие в множестве валют. Множество обновляется не чаще раза в день."""
        async with aiofiles.open(r"D:\MoexAPI_bot_aiogram3\data_files\Info.json", "r", encoding="utf-8") as info_opened_file:
            info = json.load(await info_opened_file.read())

        if datetime.datetime.now() - datetime.timedelta(days=1) > datetime.datetime.strptime(info["last_day_check"]["valute"], "%Y-%m-%d %H:%M:%S.%f"):
            set_valutes = set()
            async with aiohttp.ClientSession() as session:
                async with session.get("http://www.cbr.ru/scripts/XML_daily.asp") as r:
                    content = await r.text()
                    root = xml.etree.ElementTree.fromstring(content)
                    for Valute in root.findall("Valute"):
                        CharCode = Valute.find("CharCode")
                        set_valutes.add(CharCode.text)

            async with aiofiles.open(r"D:\MoexAPI_bot_aiogram3\data_files\set_valutes.bin", "wb") as set_valutes_file_opened:
                pickle.dump(set_valutes, await set_valutes_file_opened)

            info["last_day_check"]["valute"] = str(datetime.datetime.now())
            async with aiofiles.open(r"D:\MoexAPI_bot_aiogram3\data_files\Info.json", "w", encoding="utf-8") as info_opened_file:
                await info_opened_file.write(json.dumps(info, indent=3, ensure_ascii=False))

        async with aiofiles.open(r"D:\MoexAPI_bot_aiogram3\data_files\set_valutes.bin", "rb") as set_valutes_file_opened:
            set_valutes = pickle.load(await set_valutes_file_opened.read())

        return self.name in set_valutes

    async def CurrentExchangeRate(self):
        '''Текущий курс обмена валюты на рубль'''
        async with aiohttp.ClientSession() as session:
            async with session.get("http://www.cbr.ru/scripts/XML_daily.asp") as r:
                content = await r.text()
                root = xml.etree.ElementTree.fromstring(content)
                for Valute in root.findall("Valute"):
                    for CharCode in Valute.findall("CharCode"):
                        if CharCode.text == self.name:
                            return Valute.find("VunitRate").text