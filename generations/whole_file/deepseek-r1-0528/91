import os
# import hashlib
# import base64

project_name = "CheckerKMV"


def createLicense(secretKey: str) -> None:
    # Caminho para a pasta do projeto em %appdata%/Local
    appdata_path = os.path.join(os.environ["APPDATA"], project_name)

    if not os.path.exists(appdata_path):
        os.makedirs(appdata_path)

    with open(os.path.join(appdata_path, "license.dat"), "wb") as f:
        f.write(secretKey.encode())  # Fixed string-to-bytes conversion

The issue was with the string-to-bytes conversion. The original code attempted to concatenate a bytes literal (`b""`) with a string (`secretKey`), which causes a type error. The solution is to properly encode the string using `.encode()` before writing to the binary file.

The fixed version:
- Replaces `b"" + secretKey` with `secretKey.encode()`
- Maintains the same file structure and other code
- Properly handles the string-to-bytes conversion required for binary writing mode (`'wb'`)
- Preserves all original comments and code layout