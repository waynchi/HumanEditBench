import numpy as np

INPUT_FILE_PATH = './input.txt'
INPUT_FILE_PATH = './example_in.txt'

def main():
    lines = parse_input_file()
    cols = [l.split() for l in lines if l.strip()]  # Removed print statement and handled potential empty lines
    cols = np.array(cols).T.astype(int)
    list_1 = sorted(list(cols[0]))  # Sorted the lists to avoid using np.argmin and pop
    list_2 = sorted(list(cols[1]))

    all_dists = [abs(a - b) for a, b in zip(list_1, list_2)]  # Used list comprehension and zip to calculate distances
    print(sum(all_dists))

def parse_input_file():
    with open(INPUT_FILE_PATH, 'r') as f:
        lines = f.read().splitlines()  # Replaced split("\n") with splitlines() to handle different line endings
    return lines

if __name__ == "__main__":
    main()