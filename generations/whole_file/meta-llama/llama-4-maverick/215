"""
Main entry point for the Audio Recorder and Transcriber application.
"""

import os
import sys
import logging
import tkinter as tk
import tkinterdnd2

def setup_logging():
    """
    Set up logging configuration for the application.
    """
    log_format = '%(asctime)s - %(levelname)s - %(message)s'
    logging.basicConfig(
        level=logging.INFO,
        format=log_format,
        handlers=[
            logging.StreamHandler(),
            logging.FileHandler('app.log', encoding='utf-8')
        ]
    )

def get_resource_path():
    """
    Get the resource path that works for both development and PyInstaller.

    Returns:
        str: Path to resources directory
    """
    try:
        if getattr(sys, 'frozen', False):
            # 作为编译后的可执行文件运行
            return os.path.join(os.path.dirname(sys.executable), 'resources')
        else:
            # 作为脚本运行
            return os.path.join(os.path.dirname(os.path.abspath(__file__)), 'resources')
    except Exception as e:
        logging.error(f"Error getting resource path: {e}")
        return None

def check_resources():
    """
    Check if required resource files exist.

    Returns:
        bool: True if all required resources are present
    """
    required_files = ['sound.mp3', 'done.mp3', 'cancel.wav', 'help_text.txt']
    resource_dir = get_resource_path()
    
    if resource_dir is None:
        logging.error("Resource directory path is None")
        return False
    
    # 检查每个所需文件是否存在
    missing_files = []
    for file in required_files:
        if not os.path.exists(os.path.join(resource_dir, file)):
            missing_files.append(file)
    
    # 如果有任何必需的文件丢失，则返回 False
    if missing_files:
        logging.error(f"Missing resource files: {', '.join(missing_files)}")
        return False
    return True

def main():
    """
    Main function to start the application.
    """
    try:
        # 设置日志记录
        setup_logging()
        logging.info("Starting Audio Recorder and Transcriber application")

        # 检查资源
        if not check_resources():
            logging.error("Required resource files are missing. Application cannot start.")
            sys.exit(1)

        # 初始化支持拖放的主窗口
        root = tkinterdnd2.TkinterDnD.Tk()
        
        # 在这里导入以避免循环导入
        from gui.main_window import AudioTranscriberApp
        
        # 创建应用程序实例
        app = AudioTranscriberApp(root)
        
        # 启动主事件循环
        root.mainloop()
        
    except Exception as e:
        logging.error(f"Application error: {e}")
        raise

if __name__ == "__main__":
    main()