# Folder ze wszystkimi zdjęciami / folder ze zdjęciami do treningu
TRAIN_DIR = os.path.join(DATA_PATH, "train")
# Odczytujemy nazwy katalogów, które są rodzajem zaćmienia
ECLIPSE_LIST = {i:name for i, name in enumerate(os.listdir(TRAIN_DIR))}

# Podział na zbiór treningowy i walidacyjny
train_eclipse_list, val_eclipse_list = {}, {}
for eclipse in ECLIPSE_LIST.values():
    # Przetwarzamy zbiór obrazów.
    eclipse_path = os.path.join(TRAIN_DIR, eclipse)
    # Sortujemy obrazy dla deterministyczności
    images_filename = sorted(os.listdir(eclipse_path))

    # Wydzielamy część obrazów do walidacji
    num_images = len(images_filename)
    num_val = int(num_images * VAL_FRAC)
    indices = sample_without_replacement(num_images, num_val, random_state=42)
    val_images = np.take(images_filename, indices)
    train_images = np.delete(images_filename, indices)

    train_eclipse_list[eclipse] = train_images
    val_eclipse_list[eclipse] = val_images

    print(f'{eclipse} | train images = {len(train_images)} | val images = {len(val_images)}')


# Folder ze zdjęciami do walidacji
VAL_DIR = os.path.join(DATA_PATH, "val")
os.makedirs(VAL_DIR, exist_ok=True)

# Folder z zdjęciami do testów
TEST_DIR = os.path.join(DATA_PATH, "test")


# Udział obrazów w walidacji
VAL_FRAC = 0.3


# Tworzymy nowy folder z danymi treningowymi
NEW_TRAIN_DIR = os.path.join(DATA_PATH, "new_train")
os.makedirs(NEW_TRAIN_DIR, exist_ok=True)

# Zapisujemy nowy zbiór treningowy i walidacyjny
for eclipse in ECLIPSE_LIST.values():
    os.makedirs(os.path.join(NEW_TRAIN_DIR, eclipse), exist_ok=True)
    os.makedirs(os.path.join(VAL_DIR, eclipse), exist_ok=True)

    for image_filename in train_eclipse_list[eclipse]:
        source = os.path.join(TRAIN_DIR, eclipse, image_filename)
        destination = os.path.join(NEW_TRAIN_DIR, eclipse, image_filename)
        shutil.copy(source, destination)

    for image_filename in val_eclipse_list[eclipse]:
        source = os.path.join(TRAIN_DIR, eclipse, image_filename)
        destination = os.path.join(VAL_DIR, eclipse, image_filename)
        shutil.copy(source, destination)