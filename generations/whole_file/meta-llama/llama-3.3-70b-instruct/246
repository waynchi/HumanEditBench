import random

def roll_dice(num_rolls):
    """Бросает шестигранный кубик указанное количество раз и возвращает частоты каждого результата.

Аргументы:
    num_rolls: Количество бросков кубика.

Возвращает:
    Словарь, где ключи - числа от 1 до 6 (представляющие грани кубика), а значения - их частоты. Возвращает пустой словарь, если num_rolls не является положительным целым числом.

Вызывает:
    TypeError: если num_rolls не является целым числом.
    ValueError: если num_rolls не является положительным."""
    if not isinstance(num_rolls, int):
        raise TypeError("Number of rolls must be an integer.")
    if num_rolls <= 0:
        raise ValueError("Number of rolls must be positive.")

    frequencies = {i: 0 for i in range(1, 7)}  # Инициализировать частоты для каждой грани (1-6)
    for _ in range(num_rolls):
        roll = random.randint(1, 6)  # Симулировать бросок кубика
        frequencies[roll] += 1
    return frequencies

if __name__ == "__main__":
    num_rolls = 10000
    try:
        results = roll_dice(num_rolls)
        print(f"Frequencies of die rolls after {num_rolls} rolls:")
        for face, frequency in results.items():
            print(f"Face {face}: {(frequency / num_rolls) * 100:.2f}% ({frequency} times)")

    except (TypeError, ValueError) as e:
        print(f"Error: {e}")