from beem.discussions import Discussions, Query
from beem.comment import Comment
import random
import string

n_respuestas_minimas = 5
diccionario = {}

def procesar (texto: str):
    return "count me " in texto
def is_own_author (autor: str):
    return autor == 'subidu'
def is_banned (autor: str):
    list_banned = []
    return autor in list_banned
def generar_permlink_unico () -> str:
    return "".join(random.choices(string.digits, k=10))
def procesar_replies (replies: Comment):
    pass
def preparar_comentario (parent_author: str, parent_permlink: str, permlink: str, title: str = '', author: str = 'subidu' , body: str = 'Count me in ^^ @subidu') -> dict[str:str]:
    return {
        "parent_author": parent_author,
        "parent_permlink": parent_permlink,
        "author": author,
        "permlink": permlink,
        "title": title,
        "body": body,
    }

def create_hierarchical_dict(post_generator):
    hierarchical_dict = {}
    for post in post_generator:
        post_author = post['author']
        post_permlink = post['permlink']
        post_replies = post['children']
        post_dict = {
            'author': post_author,
            'permlink': post_permlink,
            'replies': []
        }
        if post_replies > n_respuestas_minimas:
            comment = Comment(authorperm=f"{post_author}/{post_permlink}")
            replies_list = comment.get_replies()
            for reply in replies_list:
                author = reply['author']
                text = reply['body']
                if is_own_author(author):
                    break
                if is_banned(author):
                    break
                if procesar(text):
                    post_dict['replies'].append({
                        'author': author,
                        'text': text
                    })
        hierarchical_dict[f"{post_author}/{post_permlink}"] = post_dict
    return hierarchical_dict

q = Query()
d = Discussions()
posts_generator = d.get_discussions("created", q, limit=6000)
hierarchical_dict = create_hierarchical_dict(posts_generator)

X = 0
for post_key, post_value in hierarchical_dict.items():
    X += 1
    if len(post_value['replies']) > 3:
        print("Iterador: ", X)
        for reply in post_value['replies']:
            print(reply['author'],'/', reply['text'])