import tkinter as tk
import random
import math

class Square:
    def __init__(self, canvas, size, x, y):
        self.canvas = canvas
        self.size = int(size)
        self.x = int(x)
        self.y = int(y)
        self.dx = random.choice([-2, 2])
        self.dy = random.choice([-2, 2])
        # Generate a random color for each square
        self.color = "#%02x%02x%02x" % (
            random.randint(0,255),
            random.randint(0,255),
            random.randint(0,255)
        )
        # Draw the square with its random color
        self.square = canvas.create_rectangle(
            self.x, self.y,
            self.x + self.size, self.y + self.size,
            fill=self.color, outline="black"
        )

    def move(self):
        self.x += self.dx
        self.y += self.dy
        self.canvas.move(self.square, self.dx, self.dy)
        
        # Check boundaries
        canvas_width = self.canvas.winfo_width()
        canvas_height = self.canvas.winfo_height()
        
        if (self.x <= 0 or self.x + self.size >= canvas_width or 
            self.y <= 0 or self.y + self.size >= canvas_height):
            # Delete current square
            self.canvas.delete(self.square)
            # Create two new squares if size is big enough
            if self.size > 10:
                new_size = self.size // 2
                # Center spawn positions
                cx = canvas_width // 2
                cy = canvas_height // 2
                offset = new_size // 2
                squares.append(Square(
                    self.canvas,
                    new_size,
                    cx - offset,
                    cy - offset
                ))
                squares.append(Square(
                    self.canvas,
                    new_size,
                    cx + offset,
                    cy + offset
                ))
            return False
        return True

def update():
    global squares
    # Move all squares and remove those that hit boundaries
    squares = [square for square in squares if square.move()]
    root.after(20, update)  # Update every 20ms

# Create main window
root = tk.Tk()
root.title("Splitting Squares")

# Create canvas
canvas = tk.Canvas(root, width=600, height=600, bg="white")
canvas.pack(expand=True, fill="both")

# Create initial square
squares = [Square(canvas, 100, 250, 250)]

# Start animation
update()

# Start main loop
root.mainloop()