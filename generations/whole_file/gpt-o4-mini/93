from langchain_ollama import ChatOllama
from langchain_core.prompts.chat import ChatPromptTemplate
import json

def generate_shap_response(
    json_path: str = "Vuori_Final_Approval_2024_09_24.json",
    prompt_path: str = "system.prompt",
    model: str = "llama3.2",
    base_url: str = "http://localhost:11434",
):
    # Initialize the ChatOllama model
    chat_model = ChatOllama(model=model, base_url=base_url)
    # chat_model = ChatOllama(
    #     model="llama3.1:70b",
    #     base_url="http://ada-open-webui.serveo.net/ollama",
    #     client_kwargs={
    #         "headers": {"authorization": "Bearer <MASKED>"}
    #     },
    # )

    # Load SHAP values from JSON file
    with open(json_path, "r") as file:
        shap_values_json = json.load(file).get("shap_values")

    # Load system prompt from file
    with open(prompt_path, "r") as file:
        sys_prompt = file.read().strip()

    # Prepare the messages
    prompt = ChatPromptTemplate(
        [
            ("system", sys_prompt),
            ("human", "{user_input}"),
        ]
    )

    # Generate the response
    user_input = json.dumps(shap_values_json)  # Prepare user input
    chain = prompt | chat_model
    response = chain.invoke(user_input)

    return response.content

if __name__ == "__main__":
    result = generate_shap_response()
    print(result)