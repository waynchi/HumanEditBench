from pyspark.sql import SparkSession
from pyspark.sql.functions import col

# Crear una sesión Spark
spark = SparkSession.builder.appName("EscrituraParquetADL2").getOrCreate()

# Ejemplo de datos (reemplazar con tus datos reales)
data = [
    {"id": 1, "nombre": "Juan", "edad": 30},
    {"id": 2, "nombre": "Ana", "edad": 25},
    {"id": 3, "nombre": "Pedro", "edad": 40}
]

# Crear un DataFrame a partir de los datos
import requests

api_url = "https://api.example.com/data"  # Reemplazar con la URL real de la API
try:
    response = requests.get(api_url)
    response.raise_for_status()  # Levanta un error si la respuesta no es exitosa
    api_data = response.json()
    print("Datos obtenidos de la API:", api_data)
    
    # Analizar la estructura de los datos recibidos
    if isinstance(api_data, dict) and "data" in api_data:
        registros = api_data["data"]
    elif isinstance(api_data, list):
        registros = api_data
    else:
        registros = [api_data]
        
    df = spark.createDataFrame(registros)
except Exception as e:
    print("Error al obtener o analizar los datos de la API:", e)
    print("Usando datos de ejemplo.")
    df = spark.createDataFrame(data)

# Opcional: mostrar el esquema y algunos registros para analizar los datos
df.printSchema()
df.show()

# Configurar la conexión a ADL2 usando la identidad de Microsoft ID
# No es necesario proporcionar credenciales explícitamente en un notebook de Synapse
# Spark utilizará la identidad administrada del notebook para autenticarse.

# Especificar la ruta al contenedor y la carpeta en ADL2
container_name = "<your_container_name>"  # Reemplazar con el nombre de tu contenedor
folder_path = "<your_folder_path>"  # Reemplazar con la ruta a la carpeta dentro del contenedor
adl2_path = f"abfss://{container_name}@{<your_storage_account_name>}.dfs.core.windows.net/{folder_path}"

# Escribir el DataFrame en formato parquet en ADL2
df.write.parquet(adl2_path, mode="overwrite")

# Opcional: leer el archivo parquet para verificar
df_leido = spark.read.parquet(adl2_path)
df_leido.show()

# Detener la sesión Spark
spark.stop()