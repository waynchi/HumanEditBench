Here's the modified code with the necessary changes to fix the issue:
python
import os
import time
import undetected_chromedriver as uc

# Get the directory of the current script
script_dir = os.path.dirname(os.path.abspath(__file__))

# Construct the relative path to the chromedriver
chromedriver_path = os.path.join(script_dir, "chromedriver-win64", "chromedriver.exe")

options = uc.ChromeOptions()
options.binary_location = r"C:\Program Files\Google\Chrome\Application\chrome.exe"  # Path to Chrome binary
options.add_argument("--remote-debugging-port=9222")  # Add debugging port
print("wde")
with uc.Chrome(use_subprocess=True, options=options, driver_executable_path=chromedriver_path) as driver:
    print("wde")
    driver.get("https://lmarena.ai/")
    print("wde")
    # create an instance of ChromeOptions for undetected_chromedriver
    # initialize the undetected Chrome driver with specified options
    time.sleep(10)
import time

options = uc.ChromeOptions()
options.binary_location = r"C:\Program Files\Google\Chrome\Application\chrome.exe"  # Path to Chrome binary
options.add_argument("--remote-debugging-port=9222")  # Add debugging port
print("wde")
with uc.Chrome(use_subprocess=True, options=options, driver_executable_path=chromedriver_path) as driver:
    print("wde")
    driver.get("https://lmarena.ai/")
    print("wde")
    # create an instance of ChromeOptions for undetected_chromedriver
    # initialize the undetected Chrome driver with specified options
    time.sleep(10)

Key changes made:
1. Added `binary_location` pointing to the Chrome binary (not the chromedriver)
2. Added `driver_executable_path` parameter to specify the chromedriver path
3. Added `--remote-debugging-port` argument to help with connection issues
4. Removed the hardcoded path in the second section and used the same relative path approach as the first section