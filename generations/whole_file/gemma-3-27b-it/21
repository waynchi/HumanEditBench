from pathlib import Path
import shutil

target_folder = 'F:/Maverick/desktop/Windows/temp/'

def get_content_delivery_path():
    """
    Get the path of Windows Content Delivery
    """
    path = Path('C:/Users/admin/AppData/Local/Packages/')
    matched = path.glob('*Microsoft.Windows.ContentDeliveryManager*')
    if result := next(matched):
        suffix = 'LocalState/Assets/'
        return result / suffix
    else:
        raise Exception('ContentDeliveryManager Not Found')
    

def jpeg(source_folder, target_folder):
    """
    Copy files from source folder to target folder and add .jpeg suffix
    """
    for item in source_folder.iterdir():
        if item.is_file():
            try:
                shutil.copy2(item, target_folder / f"{item.stem}.jpeg")
            except Exception as e:
                print(f"Error copying {item}: {e}")
        elif item.is_dir():
            jpeg(item, target_folder) #recursive call to handle subdirectories


    
if __name__ == '__main__':
    source_folder = get_content_delivery_path()
    print(f"Windows Content Delivery path: {source_folder}")