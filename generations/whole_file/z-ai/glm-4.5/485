def create_matrix(rows: int, cols: int, fill_value=0) -> list:
    """Crea una matriz de tamaño rows x cols, llena con el valor fill_value."""
    return [[fill_value for _ in range(cols)] for _ in range(rows)]

def add_matrices(matrix_a: list, matrix_b: list) -> list:
    """Suma dos matrices del mismo tamaño."""
    return [
        [matrix_a[i][j] + matrix_b[i][j] for j in range(len(matrix_a[0]))]
        for i in range(len(matrix_a))
    ]

def scalar_multiply(matrix: list, scalar: float) -> list:
    """Multiplica todos los elementos de la matriz por un escalar."""
    return [[element * scalar for element in row] for row in matrix]

def multiply_matrices(matrix_a: list, matrix_b: list) -> list:
    """Multiplica dos matrices."""
    rows_a = len(matrix_a)
    cols_a = len(matrix_a[0])
    rows_b = len(matrix_b)
    cols_b = len(matrix_b[0])
    
    result = [[0 for _ in range(cols_b)] for _ in range(rows_a)]
    
    for i in range(rows_a):
        for j in range(cols_b):
            total = 0
            for k in range(cols_a):
                total += matrix_a[i][k] * matrix_b[k][j]
            result[i][j] = total
    return result

def transpose_matrix(matrix: list) -> list:
    """Transpone una matriz."""
    return [[row[i] for row in matrix] for i in range(len(matrix[0]))]

def determinant_3x3(matrix: list) -> float:
    """Calcula el determinante de una matriz 3x3."""
    a, b, c = matrix[0]
    d, e, f = matrix[1]
    g, h, i = matrix[2]
    return a*(e*i - f*h) - b*(d*i - f*g) + c*(d*h - e*g)