python
from langchain_ollama import ChatOllama
from langchain_core.prompts.chat import ChatPromptTemplate
import json

def generate_shap_explanation(
    model="llama3.2",
    base_url="http://localhost:11434",
    shap_json_path="Vuori_Final_Approval_2024_09_24.json",
    sys_prompt_path="system.prompt"
):
    # Initialize the ChatOllama model
    chat_model = ChatOllama(model=model, base_url=base_url)
    
    # Load SHAP values from JSON file
    with open(shap_json_path, "r") as file:
        shap_values_json = json.load(file).get("shap_values")
    
    # Load system prompt from file
    with open(sys_prompt_path, "r") as file:
        sys_prompt = file.read().strip()
    
    # Prepare prompt template
    prompt = ChatPromptTemplate([
        ("system", sys_prompt),
        ("human", "{user_input}"),
    ])
    
    # Prepare user input
    user_input = json.dumps(shap_values_json)
    
    # Create and invoke chain
    chain = prompt | chat_model
    response = chain.invoke(user_input)
    
    return response.content

# Execute the function and print the result
if __name__ == "__main__":
    explanation = generate_shap_explanation()
    print(explanation)