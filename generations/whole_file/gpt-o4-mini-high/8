def is_sum_of_four_squares(n):
    """
    Retorna uma tupla (a, b, c, d) de inteiros positivos tais que
    a^2 + b^2 + c^2 + d^2 == n, ou None se não houver tal representação.
    """
    if n <= 0:
        return None
    limit = int(n**0.5)
    for a in range(1, limit + 1):
        a2 = a * a
        if a2 > n:
            break
        for b in range(1, limit + 1):
            b2 = b * b
            if a2 + b2 > n:
                break
            for c in range(1, limit + 1):
                c2 = c * c
                sum3 = a2 + b2 + c2
                if sum3 > n:
                    break
                d2 = n - sum3
                d = int(d2**0.5)
                if d >= 1 and d * d == d2:
                    return a, b, c, d
    return None

def find_four_squares_sums(limit):
    """
    Finds numbers up to a limit that can be expressed as the sum of four squares
    without any of the squares being zero.
    """
    results = []
    for n in range(1, limit + 1):
        result = is_sum_of_four_squares(n)
        if result:
            results.append(n)
    return results

# Example usage:
limit = int(input("Digite o limite superior: "))
sums_found = find_four_squares_sums(limit)
print("Números que podem ser expressos como a soma de quatro quadrados não nulos:")
for num in sums_found:
    a, b, c, d = is_sum_of_four_squares(num)
    print(f"{num} = {a}^2 + {b}^2 + {c}^2 + {d}^2")