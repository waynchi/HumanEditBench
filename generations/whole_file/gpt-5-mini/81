import React from 'react';
import styles from './CharacterStatUI.module.css';
import Sprite from '../sprite/Sprite';
import SingleCharacterStatUI from '../single-character-stat-ui/SingleCharacterStatUI';
import MockChild from '../mock-child/MockChild';

const CharacterStatUI = ({ charName, level, wpn, hp, atk, spd, def, res }) => {
    const characterStats = [
        { characterStatType: 'NAME', characterStatValue: charName },
        { characterStatType: 'LV', characterStatValue: level },
        { characterStatType: 'WPN', characterStatValue: wpn },
        { characterStatType: 'HP', characterStatValue: hp },
        { characterStatType: 'ATK', characterStatValue: atk },
        { characterStatType: 'SPD', characterStatValue: spd },
        { characterStatType: 'DEF', characterStatValue: def },
        { characterStatType: 'RES', characterStatValue: res },
    ];

    console.log('Character Stats:', {
        charName,
        level,
        wpn,
        hp,
        atk,
        spd,
        def,
        res
    });

    const characterStatsSlice1 = characterStats.slice(0, 4);
    const characterStatsSlice2 = characterStats.slice(4);

    return (
        <div className={styles.characterTable}>
            <div className={styles.characterCell}>                
                <MockChild componentName="CharacterStatPortrait" characterName="Alfonse">
                    {/* Container forces overflow hidden and lets the Sprite fill the available area.
                        Sprite gets styles to cover the container (fit by width or height). */}
                    <div
                        style={{
                            width: '100%',
                            height: '100%',
                            display: 'flex',
                            alignItems: 'center',
                            justifyContent: 'center',
                            overflow: 'hidden',
                            boxSizing: 'border-box',
                            paddingLeft: 8
                        }}
                    >
                        <Sprite
                            spriteName="PortraitAlfonse"
                            // Inline styles try to make the sprite cover the container.
                            // If Sprite renders an <img>, objectFit will apply; if it renders a background,
                            // width/height will still force sizing. Keep min sizes similar to original CSS.
                            style={{
                                width: '100%',
                                height: '100%',
                                minWidth: '144px',
                                minHeight: '204.8px',
                                objectFit: 'cover',
                                display: 'block',
                                flexShrink: 0
                            }}
                        />
                    </div>
                </MockChild>
            </div>
                <div className={styles.characterCell}>
                    {characterStatsSlice1.map((item, index) => (
                        <SingleCharacterStatUI
                            key={index}
                            characterStatType={item.characterStatType}
                            characterStatValue={item.characterStatValue}
                            backgroundColor="white"
                        />
                    ))}
                </div>
                <div className={styles.characterCell}>
                    {characterStatsSlice2.map((item, index) => (
                        <SingleCharacterStatUI
                            key={index}
                            characterStatType={item.characterStatType}
                            characterStatValue={item.characterStatValue}
                            backgroundColor="white"
                        />                        
                    ))}
                </div>
            </div>
    );
};

export default CharacterStatUI;


// 
<Sprite spriteName="PortraitAlfonse" />