const cameraService = require('./camera.service');
const models = require('../models'); // Assuming this exports the Sequelize instance

const createCamera = async (req, res) => {
  try {
    const camera = await cameraService.createCamera(req.body);
    const [results] = await models.sequelize.query(
      `SELECT c.*, a.area_name 
       FROM cameras c 
       JOIN areas a ON c.area_id = a.id 
       WHERE c.id = :id`,
      {
        replacements: { id: camera.id },
        type: models.QueryTypes.SELECT
      }
    );
    res.status(201).json(results[0]);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

const getAllCameras = async (req, res) => {
  try {
    const cameras = await cameraService.getAllCameras();
    res.status(200).json(cameras);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

const getCameraById = async (req, res) => {
  try {
    const camera = await cameraService.getCameraById(req.params.id);
    if (!camera) {
      return res.status(404).json({ message: 'Camera not found' });
    }
    res.status(200).json(camera);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

const updateCamera = async (req, res) => {
  try {
    const camera = await cameraService.updateCamera(req.params.id, req.body);
    if (!camera) {
      return res.status(404).json({ message: 'Camera not found' });
    }
    res.status(200).json(camera);
  } catch (error) {
     res.status(500).json({ error: error.message });
  }
};

const deleteCamera = async (req, res) => {
  try {
    const success = await cameraService.deleteCamera(req.params.id);
    if (!success) {
      return res.status(404).json({ message: 'Camera not found' });
    }
    res.status(204).send();
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

module.exports = {
  createCamera,
  getAllCameras,
  getCameraById,
  updateCamera,
  deleteCamera,
};