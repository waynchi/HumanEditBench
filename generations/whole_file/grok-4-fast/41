from pyspark.sql import SparkSession
from pyspark.sql.functions import col
import requests

# Crear una sesión Spark
spark = SparkSession.builder.appName("EscrituraParquetADL2").getOrCreate()

# Obtener datos desde la API
api_url = "<your_api_url>"  # Reemplazar con la URL de tu API
response = requests.get(api_url)
if response.status_code == 200:
    data = response.json()  # Asumiendo que la API retorna una lista de diccionarios JSON
else:
    raise Exception(f"Error al obtener datos de la API: {response.status_code}")

# Crear un DataFrame a partir de los datos
df = spark.createDataFrame(data)

# Análisis de los datos
print("Esquema del DataFrame:")
df.printSchema()
print("\nMuestra de los datos:")
df.show()

# Configurar la conexión a ADL2 usando la identidad de Microsoft ID
# No es necesario proporcionar credenciales explícitamente en un notebook de Synapse
# Spark utilizará la identidad administrada del notebook para autenticarse.

# Especificar la ruta al contenedor y la carpeta en ADL2
container_name = "<your_container_name>"  # Reemplazar con el nombre de tu contenedor
folder_path = "<your_folder_path>"  # Reemplazar con la ruta a la carpeta dentro del contenedor
adl2_path = f"abfss://{container_name}@{<your_storage_account_name>}.dfs.core.windows.net/{folder_path}"

# Escribir el DataFrame en formato parquet en ADL2
df.write.parquet(adl2_path, mode="overwrite")

# Opcional: leer el archivo parquet para verificar
df_leido = spark.read.parquet(adl2_path)
df_leido.show()

# Detener la sesión Spark
spark.stop()