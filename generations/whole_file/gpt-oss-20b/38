import os
import shutil
import numpy as np
from sklearn.model_selection import train_test_split

# Папка со всеми фотографиями / папка с фотографиями для тренировки
TRAIN_DIR = os.path.join(DATA_PATH, "train")
# Считываем названия директорий, которые и являются видом затмения
ECLIPSE_LIST = {i:name for i, name in enumerate(os.listdir(TRAIN_DIR))}


# Папка с фотографиями для валидации
VAL_DIR = os.path.join(DATA_PATH, "val")
os.makedirs(VAL_DIR, exist_ok=True)

# Папка с фотографиями для теста
TEST_DIR = os.path.join(DATA_PATH, "test")


# Доля изображений в валидации
VAL_FRAC = 0.3


# Создаем директорию с валидационной выборкой для каждого вида затмения.
for eclipse in ECLIPSE_LIST.values():
    source_dir = os.path.join(TRAIN_DIR, eclipse)
    val_dir = os.path.join(VAL_DIR, eclipse)
    os.makedirs(val_dir, exist_ok=True)

    # Считываем выборку изображений.
    images_filename = sorted(os.listdir(source_dir))

    # Делим данные на train и val с фиксированным random_state
    train_images, val_images = train_test_split(
        images_filename,
        test_size=VAL_FRAC,
        random_state=42,
        shuffle=True
    )

    print(f'{eclipse} | train images = {len(train_images)} | val images = {len(val_images)}')

    # Сохраняем валидационную выборку
    for image_filename in val_images:
        source = os.path.join(source_dir, image_filename)
        destination = os.path.join(val_dir, image_filename)
        shutil.copy(source, destination)