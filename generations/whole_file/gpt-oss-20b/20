import numpy as np

# Use a single, clear input file path
INPUT_FILE_PATH = './example_in.txt'

def main():
    lines = parse_input_file()
    print(lines)
    # Split each line into columns using at least three consecutive spaces.
    import re
    cols = [re.split(r'\s{3,}', l.strip()) for l in lines if l.strip()]
    # Convert the split strings to integers.
    cols = np.array(cols, dtype=int)
    # Separate the two columns.
    col1, col2 = cols[:, 0], cols[:, 1]
    # Sort each column so the smallest values are paired together.
    sorted1, sorted2 = np.sort(col1), np.sort(col2)
    # Compute absolute pairwise differences and sum them.
    all_dists = np.abs(sorted1 - sorted2)
    print(all_dists.sum())

def parse_input_file():
    # Read the file, stripping leading/trailing whitespace and ignoring empty lines.
    with open(INPUT_FILE_PATH, 'r', encoding='utf-8') as f:
        return [line.strip() for line in f if line.strip()]

if __name__ == "__main__":
    main()