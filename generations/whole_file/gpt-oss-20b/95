import random
import logging
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
import time
from selenium.common.exceptions import NoSuchElementException, WebDriverException

class SearchModule:
    def __init__(self, driver, config):
        self.driver = driver
        self.config = config
        self.search_engine = config.get('Search', 'search_engine')
        self.queries = [q.strip() for q in config.get('Search', 'queries').split(',')]
        self.random_query = config.getboolean('Search', 'random_query')

    def perform_search(self):
        query = random.choice(self.queries) if self.random_query else self.queries[0]
        logging.info(f"Performing search with query: {query}")

        try:
            if self.search_engine.lower() == 'google':
                self.driver.get("https://www.google.com")
                search_box = self.driver.find_element(By.NAME, "q")
            elif self.search_engine.lower() == 'yandex':
                self.driver.get("https://ya.ru")
                search_box = self.driver.find_element(By.CSS_SELECTOR, 'input[placeholder="Найдётся всё"]')
            elif self.search_engine.lower() == 'bing':
                self.driver.get("https://www.bing.com")
                search_box = self.driver.find_element(By.NAME, "q")
            else:
                logging.error("Unsupported search engine.")
                return
        except NoSuchElementException as e:
            logging.error(f"Search box not found: {e}")
            return
        except WebDriverException as e:
            logging.error(f"Error loading search engine page: {e}")
            return

        try:
            search_box.send_keys(query + Keys.RETURN)
        except WebDriverException as e:
            logging.error(f"Error sending keys to search box: {e}")
            return

        time.sleep(random.uniform(2, 4))  # Ожидание загрузки результатов

    def navigate_random_link(self):
        logging.info("Navigating to a random search result link.")
        try:
            if self.search_engine.lower() == 'google':
                links = self.driver.find_elements(By.CSS_SELECTOR, 'div.yuRUbf > a')
            elif self.search_engine.lower() == 'yandex':
                links = self.driver.find_elements(By.CSS_SELECTOR, 'a.link')
            elif self.search_engine.lower() == 'bing':
                links = self.driver.find_elements(By.CSS_SELECTOR, 'li.b_algo h2 a')
            else:
                logging.error("Unsupported search engine.")
                return
        except WebDriverException as e:
            logging.error(f"Error retrieving links: {e}")
            return

        if not links:
            logging.warning("No links found on the search results page.")
            return

        random_link = random.choice(links)
        href = random_link.get_attribute('href')
        if not href:
            logging.warning("Selected link does not have an href attribute.")
            return

        try:
            logging.info(f"Navigating to: {href}")
            self.driver.get(href)
        except WebDriverException as e:
            logging.error(f"Error navigating to link: {e}")
            return

        time.sleep(random.uniform(3, 6))  # Ожидание загрузки страницы