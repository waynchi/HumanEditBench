from main13 import knn, mlp
import pandas as pd

# Initialize np_df once outside the loops
np_df = pd.DataFrame(index=range(10, 200, 10), columns=[1, 2, 3], dtype=object)

for pclass in [1, 2, 3]:
    for fare in range(10, 200, 10):
            my_df = pd.DataFrame({
                "Pclass": [pclass]*3,
                "Name": [24]*3,
                "Sex": [0]*3, 
                "Age": [19]*3,
                "SibSp": [0]*3,
                "Parch": [0]*3,
                "Fare": [fare]*3,
                "Embarked": ["S", "Q", "C"]
            })
            my_df = pd.get_dummies(my_df, columns=["Embarked"], prefix="Embarked") #делаем one-hot
            # Ensure all 'Embarked' columns exist after one-hot encoding, even if not present in the sample
            for col in ["Embarked_S", "Embarked_C", "Embarked_Q"]:
                if col not in my_df.columns:
                    my_df[col] = 0
            my_df["Embarked_S"] = my_df["Embarked_S"].map({True: 1, False: 0})
            my_df["Embarked_C"] = my_df["Embarked_C"].map({True: 1, False: 0})
            my_df["Embarked_Q"] = my_df["Embarked_Q"].map({True: 1, False: 0})


            np_df.loc[fare, pclass] = {"knn": knn.predict(my_df), "mlp": mlp.predict(my_df)}
print(np_df)