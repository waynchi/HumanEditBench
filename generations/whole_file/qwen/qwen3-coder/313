import tkinter as tk
import random
import math

class Square:
    def __init__(self, canvas, size, x, y):
        self.canvas = canvas
        self.size = size
        self.x = x
        self.y = y
        self.dx = random.choice([-2, 2])
        self.dy = random.choice([-2, 2])
        self.color = random.choice(["red", "green", "blue", "orange", "purple", "yellow", "pink", "cyan"])
        self.square = canvas.create_rectangle(x, y, x + size, y + size, fill=self.color)

    def move(self):
        self.x += self.dx
        self.y += self.dy
        self.canvas.move(self.square, self.dx, self.dy)
        
        # Проверка границ
        canvas_width = self.canvas.winfo_width()
        canvas_height = self.canvas.winfo_height()
        
        if (self.x <= 0 or self.x + self.size >= canvas_width or 
            self.y <= 0 or self.y + self.size >= canvas_height):
            # Удалить текущий квадрат
            self.canvas.delete(self.square)
            # Создать два новых квадрата, если размер достаточно большой
            if self.size > 10:
                new_size = self.size / 2
                squares.append(Square(self.canvas, new_size, 
                                   self.x - new_size/2, 
                                   self.y - new_size/2))
                squares.append(Square(self.canvas, new_size, 
                                   self.x + self.size + new_size/2, 
                                   self.y + self.size + new_size/2))
            return False
        return True

def update():
    global squares
    # Переместить все квадраты и удалить те, которые достигли границ
    squares = [square for square in squares if square.move()]
    root.after(20, update)  # Обновление каждые 20 мс

# Создать главное окно
root = tk.Tk()
root.title("Splitting Squares")

# Создать холст
canvas = tk.Canvas(root, width=600, height=600, bg="white")
canvas.pack(expand=True, fill="both")

# Создать начальный квадрат
squares = [Square(canvas, 100, 250, 250)]

# Запустить анимацию
update()

# Запустить главный цикл
root.mainloop()
