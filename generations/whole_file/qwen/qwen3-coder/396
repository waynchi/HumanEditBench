# Importowanie Pymapdl
# from ansys.mapdl.core import launch_mapdl

# Utwórz instancję MAPDL
# mapdl = launch_mapdl(override=True)

# Zdefiniuj funkcję do dopasowania linii prostej do tablicy def fit_line(x, y):
import numpy as np

def fit_line(x, y):
    """Funkcja dopasowująca prostą do tablicy"""
    # Oblicz średnią wartość x i y
    x_mean = np.mean(x)
    y_mean = np.mean(y)
    
    # Oblicz odchylenie x i y
    x_dev = x - x_mean
    y_dev = y - y_mean
    
    # Obliczanie iloczynu odchyleń x i y
    xy_dev = x_dev * y_dev
    
    # Obliczanie kwadratu odchylenia x
    x_dev_squared = x_dev ** 2
    
    # Oblicz nachylenie i punkt przecięcia linii prostej
    slope = np.sum(xy_dev) / np.sum(x_dev_squared)
    intercept = y_mean - slope * x_mean
    
    return slope, intercept

# Zdefiniuj funkcję do dopasowania krzywej kwadratowej do tablicy xy
def fit_quadratic(x, y):
    """Funkcja dopasowania krzywej kwadratowej do tablicy"""
    # Utwórz macierz Vandermonde'a
    A = np.vstack([x**2, x, np.ones(len(x))]).T
    
    # Użyj metody najmniejszych kwadratów do obliczenia współczynników
    coeffs = np.linalg.lstsq(A, y, rcond=None)[0]
    
    # Oblicz maksymalne odchylenie
    y_pred = coeffs[0]*x**2 + coeffs[1]*x + coeffs[2]
    max_deviation = np.max(np.abs(y - y_pred))
    
    return coeffs, max_deviation



