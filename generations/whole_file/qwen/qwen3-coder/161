# 可以表示为四个非零平方和的数字：

def can_be_expressed_as_four_nonzero_squares(n):
    """
    判断一个数是否可以表示为四个非零完全平方数的和
    """
    # 检查所有可能的四个非零平方数的组合
    for a in range(1, int(n**0.5) + 1):
        for b in range(a, int((n - a*a)**0.5) + 1):
            for c in range(b, int((n - a*a - b*b)**0.5) + 1):
                d_squared = n - a*a - b*b - c*c
                if d_squared > 0:
                    d = int(d_squared**0.5)
                    if d >= c and d*d == d_squared:
                        return True
    return False

def find_numbers_expressible_as_four_nonzero_squares(limit):
    """
    找到所有可以表示为四个非零平方数之和的数
    """
    result = []
    for i in range(1, limit + 1):
        if can_be_expressed_as_four_nonzero_squares(i):
            result.append(i)
    return result

# 测试函数
if __name__ == "__main__":
    # 找到100以内可以表示为四个非零平方数之和的数
    numbers = find_numbers_expressible_as_four_nonzero_squares(100)
    print("100以内可以表示为四个非零平方数之和的数:")
    print(numbers)
    
    # 验证几个具体的例子
    test_cases = [30, 64, 90]
    for num in test_cases:
        if can_be_expressed_as_four_nonzero_squares(num):
            print(f"{num} 可以表示为四个非零平方数之和")
        else:
            print(f"{num} 不能表示为四个非零平方数之和")