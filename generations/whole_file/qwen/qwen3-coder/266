from beem.discussions import Discussions, Query
from beem.comment import Comment
import random
import string

n_respuestas_minimas = 5
diccionario = {}

def procesar (texto: str):
    return "count me " in texto
def is_own_author (autor: str):
    return author == 'subidu'
def is_banned (autor: str):
    list_banned = []
    return autor in list_banned
def generar_permlink_unico () -> str:
    return "".join(random.choices(string.digits, k=10))
def procesar_replies (replies: Comment):
    pass
def preparar_comentario (parent_author: str, parent_permlink: str, permlink: str, title: str = '', author: str = 'subidu' , body: str = 'Count me in ^^ @subidu') -> dict[str:str]:
    return {
        "parent_author": parent_author,
        "parent_permlink": parent_permlink,
        "author": author,
        "permlink": permlink,
        "title": title,
        "body": body,
    }


q = Query()
d = Discussions()
posts_generator = d.get_discussions("created", q, limit=6000)
X = 0

def build_hierarchy(posts_gen):
    hierarchy = {}
    post_count = 0
    
    for post in posts_gen:
        post_author = post['author']
        post_permlink = post['permlink']
        post_replies = post['children']
        cnt = 0
        post_count += 1
        
        # Add post to hierarchy
        post_key = f"{post_author}/{post_permlink}"
        hierarchy[post_key] = {
            'author': post_author,
            'permlink': post_permlink,
            'replies_count': post_replies,
            'replies': {}
        }
        
        if post_replies > n_respuestas_minimas:
            comment = Comment(authorperm=f"{post_author}/{post_permlink}")
            post_replies_list = comment.get_replies()
            
            cnt = 0
            for replies in post_replies_list:
                author = replies['author']
                text = replies['body']
                
                # Add reply to hierarchy
                reply_key = f"{author}/{replies['permlink']}"
                hierarchy[post_key]['replies'][reply_key] = {
                    'author': author,
                    'permlink': replies['permlink'],
                    'body': text
                }
                
                if is_own_author(author):
                    # Переоценить комментарий
                    break
                if is_banned(author):
                    break
                if procesar(text):
                    cnt += 1
                    
        if cnt > 3:
            print("Iterador: ", post_count)
            print(replies['author'], '/', replies['permlink'])
            
    return hierarchy

# Build the hierarchical dictionary
diccionario = build_hierarchy(posts_generator)