# Импорт Pymapdl
# from ansys.mapdl.core import launch_mapdl

# Создать экземпляр MAPDL
# mapdl = launch_mapdl(override=True)

# Определить функцию для нахождения линии наилучшего соответствия для массива def fit_line(x, y):
import numpy as np

def fit_line(x, y):
    """Функция для нахождения линии наилучшего соответствия для массива"""
    # Вычислить среднее значение x и y
    x_mean = np.mean(x)
    y_mean = np.mean(y)
    
    # Вычисление отклонения x и y
    x_dev = x - x_mean
    y_dev = y - y_mean
    
    # Вычислить квадрат отклонения x
    x_dev_squared = x_dev ** 2
    
    # Вычисление наклона и пересечения прямой
    slope = np.sum(x_dev * y_dev) / np.sum(x_dev_squared)
    intercept = y_mean - slope * x_mean
    
    return slope, intercept

# Определить функцию для нахождения квадратичной аппроксимации массива xy
def fit_quadratic(x, y):
    """Функция для нахождения квадратичной аппроксимации массива"""
    # Создать матрицу Вандермонда
    A = np.vstack([x**2, x, np.ones(len(x))]).T
    
    # Использовать метод наименьших квадратов для нахождения коэффициентов
    coeffs = np.linalg.lstsq(A, y, rcond=None)[0]
    
    # Увеличить поиск максимального отклонения
    # Вычислить значения аппроксимации
    y_fit = A @ coeffs
    # Вычислить отклонения
    residuals = y - y_fit
    # Найти максимальное отклонение по модулю
    max_deviation = np.max(np.abs(residuals))
    
    return coeffs, max_deviation