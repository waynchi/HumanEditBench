from pathlib import Path

target_folder = 'F:/Maverick/desktop/Windows/temp/'

def get_content_delivery_path():
    """Pobierz ścieżkę Windows Content Delivery"""
    path = Path('C:/Users/admin/AppData/Local/Packages/')
    matched = path.glob('*Microsoft.Windows.ContentDeliveryManager*')
    if result := next(matched):
        suffix = 'LocalState/Assets/'
        return result / suffix
    else:
        raise Exception('ContentDeliveryManager Not Found')
    

def jpeg(source_folder, target_folder):
    """Kopiuj pliki z folderu źródłowego do folderu docelowego i dodaj sufiks .jpeg"""
    source_path = Path(source_folder)
    target_path = Path(target_folder)
    
    # Create target directory if it doesn't exist
    target_path.mkdir(parents=True, exist_ok=True)
    
    # Copy all files from source to target with .jpeg extension
    for file in source_path.iterdir():
        if file.is_file():
            new_filename = file.stem + '.jpeg'
            target_file = target_path / new_filename
            # Copy file content
            with open(file, 'rb') as src, open(target_file, 'wb') as dst:
                dst.write(src.read())
            print(f"Copied {file.name} to {new_filename}")

    
if __name__ == '__main__':
    source_folder = get_content_delivery_path()
    print(f"Windows Content Delivery path: {source_folder}")