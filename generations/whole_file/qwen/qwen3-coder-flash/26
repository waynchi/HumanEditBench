def conjugate_gradients(A, b, x0=None, tol=1e-10, max_iter=None):
    """
    Функция для метода спряжённых градиентов
    """
    if x0 is None:
        x = np.zeros_like(b)
    else:
        x = x0.copy()
    
    r = b - A @ x
    p = r.copy()
    rsold = np.dot(r, r)
    
    if max_iter is None:
        max_iter = len(b)
    
    for i in range(max_iter):
        Ap = A @ p
        alpha = rsold / np.dot(p, Ap)
        x = x + alpha * p
        r = r - alpha * Ap
        
        rsnew = np.dot(r, r)
        
        if np.sqrt(rsnew) < tol:
            break
            
        p = r + (rsnew / rsold) * p
        rsold = rsnew
    
    return x