from beem.discussions import Discussions, Query
from beem.comment import Comment
import random
import string

n_respuestas_minimas = 5
diccionario = {}

def procesar (texto: str):
    return "count me " in texto
def is_own_author (autor: str):
    return autor == 'subidu'
def is_banned (autor: str):
    list_banned = []
    return autor in list_banned
def generar_permlink_unico () -> str:
    return "".join(random.choices(string.digits, k=10))
def procesar_replies (replies: Comment):
    pass
def preparar_comentario (parent_author: str, parent_permlink: str, permlink: str, title: str = '', author: str = 'subidu' , body: str = 'Count me in ^^ @subidu') -> dict[str:str]:
    return {
        "parent_author": parent_author,
        "parent_permlink": parent_permlink,
        "author": author,
        "permlink": permlink,
        "title": title,
        "body": body,
    }

def crear_diccionario_jerarquico(posts_generator):
    diccionario_jerarquico = {}
    X = 0
    for post in posts_generator:
        post_author = post['author']
        post_permlink = post['permlink']
        post_replies = post['children']
        cnt = 0
        X += 1
        if post_replies > n_respuestas_minimas:
            comment = Comment(authorperm=f"{post_author}/{post_permlink}")
            post_replies :list = comment.get_replies()
            
            cnt = 0
            replies_list = []
            for replies in post_replies:
                author = replies['author']
                text = replies['body']
                if is_own_author(author):
                    # Reevaluar el comentario
                    break
                if is_banned(author):
                    break
                if procesar(text):
                    cnt+= 1
                replies_list.append({
                    'author': author,
                    'permlink': replies['permlink'],
                    'body': text
                })
            diccionario_jerarquico[f"{post_author}/{post_permlink}"] = {
                'author': post_author,
                'permlink': post_permlink,
                'replies': replies_list,
                'count': cnt
            }
        if cnt > 3:
            print("Iterador: ",X)
            print(replies['author'],'/',replies['permlink'])
    return diccionario_jerarquico

q = Query()
d = Discussions()
posts_generator = d.get_discussions("created", q, limit=6000)

diccionario = crear_diccionario_jerarquico(posts_generator)