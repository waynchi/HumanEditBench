import os
import time
import undetected_chromedriver as uc

# Obtener el directorio del script actual
script_dir = os.path.dirname(os.path.abspath(__file__))

# Construir la ruta relativa al chromedriver
chromedriver_path = os.path.join(script_dir, "chromedriver-win64", "chromedriver.exe")

options = uc.ChromeOptions()
# Paso 1: NO uses chromedriver.exe como binary_location; debe ser el ejecutable de Chrome (chrome.exe).
# Si quieres forzar una ruta concreta de Chrome, apunta al chrome.exe, no al chromedriver.exe.
# Ejemplo: options.binary_location = r"C:\Program Files\Google\Chrome\Application\chrome.exe"
# Si prefieres que undetected-chromedriver descargue/lance su propio Chrome, simplemente no toques binary_location.
#
# Paso 2: Añade argumentos útiles para evitar errores de sesión:
options.add_argument("--no-sandbox")
options.add_argument("--disable-dev-shm-usage")
options.add_argument("--disable-gpu")
options.add_argument("--remote-debugging-port=0")  # Puerto aleatorio; evita conflictos
print("wde")
with uc.Chrome(driver_executable_path=chromedriver_path,
               use_subprocess=True,
               options=options) as driver:
    print("wde")
    driver.get("https://lmarena.ai/")
    print("wde")
    # crear una instancia de ChromeOptions para undetected_chromedriver
    # inicializar el controlador de Chrome no detectado con las opciones especificadas
    time.sleep(10)
import time

options = uc.ChromeOptions()
options.binary_location = (
    r"C:\Programming\Test\IP_Test\chromedriver-win64\chromedriver.exe"
)
print("wde")
with uc.Chrome(use_subprocess=True, options=options) as driver:
    print("wde")
    driver.get("https://lmarena.ai/")
    print("wde")
    # crear una instancia de ChromeOptions para undetected_chromedriver
    # inicializar el controlador de Chrome no detectado con las opciones especificadas
    time.sleep(10)