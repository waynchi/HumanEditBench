from langchain_ollama import ChatOllama
from langchain_core.prompts.chat import ChatPromptTemplate
import json

def generate_response(model_name, base_url, shap_values_file, system_prompt_file):
    # 初始化 ChatOllama 模型
    chat_model = ChatOllama(model=model_name, base_url=base_url)
    # chat_model = ChatOllama(
    # model="llama3.1:70b",
    # base_url="http://ada-open-webui.serveo.net/ollama",
    # client_kwargs={
    # headers": {"authorization": "Bearer <已隐藏>"}
    # },
    # )

    # 从 JSON 文件加载 SHAP 值
    with open(shap_values_file, "r") as file:
        shap_values_json = json.load(file).get("shap_values")

    # 从文件加载系统提示
    with open(system_prompt_file, "r") as file:
        sys_prompt = file.read().strip()

    # 准备消息
    prompt = ChatPromptTemplate(
        [
            ("system", sys_prompt),
            ("human", "{user_input}"),
        ]
    )

    # 生成响应
    user_input = json.dumps(shap_values_json)  # 准备用户输入

    chain = prompt | chat_model

    # 打印响应
    response = chain.invoke(user_input)
    return response.content

# 调用函数
response_content = generate_response(
    model_name="llama3.2",
    base_url="http://localhost:11434",
    shap_values_file="Vuori_Final_Approval_2024_09_24.json",
    system_prompt_file="system.prompt"
)

print(response_content)