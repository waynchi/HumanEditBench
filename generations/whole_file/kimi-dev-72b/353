#
# @lc app=leetcode id=2379 lang=python3
#
# [2379] Minimalna liczba przemalowań, aby uzyskać K kolejnych czarnych bloków
#
# https://leetcode.com/problems/minimum-recolors-to-get-k-consecutive-black-blocks/description/
#
# algorytmy
# Łatwe (59,47%)
# Lubi: 751
# Nie lubi: 21
# Łącznie zaakceptowane: 61.3K
# Całkowita liczba zgłoszeń: 103K
# Przykład przypadku testowego: '"WBBWWBBWBW"\n7
#
# Dany jest ciąg bloków o indeksie 0 o długości n, gdzie blocks[i] to
# albo 'W', albo 'B', reprezentując kolor i-tego bloku. Znaki
# W' i 'B' oznaczają odpowiednio kolory biały i czarny.
# 
# Masz również daną liczbę całkowitą k, która jest pożądaną liczbą kolejnych
# czarnych bloków.
# 
# W jednej operacji możesz przemalować biały blok, tak aby stał się czarny
# blok.
# 
# Zwróć minimalną liczbę operacji potrzebnych, aby było co najmniej
# jedno wystąpienie k kolejnych czarnych bloków.
# 
# 
# Przykład 1:
# 
# 
# Dane wejściowe: bloks = "WBBWWBBWBW", k = 7
# Wyjście: 3
# Wyjaśnienie:
# Jednym ze sposobów na uzyskanie 7 kolejnych czarnych bloków jest przemalowanie 0-go, 3-go i
# 4-ty blok
# tak, aby bloks = "BBBBBBBWBW".
# Można wykazać, że nie ma sposobu na uzyskanie 7 kolejnych czarnych bloków w
# mniej niż 3 operacje.
# Zatem zwracamy 3.
# 
# 
# Przykład 2:
# 
# 
# Dane wejściowe: bloks = "WBWBBBW", k = 2
# Wyjście: 0
# Wyjaśnienie:
# Nie trzeba wprowadzać żadnych zmian, ponieważ już istnieją 2 kolejne czarne bloki.
# Zatem zwracamy 0.
# 
# 
# 
# Ograniczenia:
# 
# 
# n == długość bloks
# 1 <= n <= 100
# bloks[i] jest albo 'W', albo 'B'.
# 1 <= k <= n
# 
# 
#

# @lc code=start
class Solution:
    def minimumRecolors(self, blocks: str, k: int) -> int:
        min_recolors = k  # initialize to the max possible value, which is k
        for i in range(len(blocks) - k + 1):
            window = blocks[i:i + k]  # extract the current window of size k
            white_count = window.count('W')  # count the number of white blocks in the current window
            min_recolors = min(min_recolors, white_count)  # update the minimum recolors needed
        return min_recolors

# @lc code=end

