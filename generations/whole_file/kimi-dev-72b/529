from langchain_ollama import ChatOllama
from langchain_core.prompts.chat import ChatPromptTemplate
import json

def generate_response(shap_values_file, system_prompt_file, model="llama3.2", base_url="http://localhost:11434"):
    # Inicializar el modelo ChatOllama
    chat_model = ChatOllama(model=model, base_url=base_url)
    # chat_model = ChatOllama(
    # modelo="llama3.1:70b",
    # base_url="http://ada-open-webui.serveo.net/ollama",
    # client_kwargs={
    # headers": {"authorization": "Bearer <OCULTO>"}
    # },
    # )

    # Cargar valores SHAP desde archivo JSON
    with open(shap_values_file, "r") as file:
        shap_values_json = json.load(file).get("shap_values")

    # Cargar el mensaje del sistema desde el archivo
    with open(system_prompt_file, "r") as file:
        sys_prompt = file.read().strip()

    # Prepara los mensajes
    prompt = ChatPromptTemplate(
        [
            ("system", sys_prompt),
            ("human", "{user_input}"),
        ]
    )

    # Generar la respuesta
    user_input = json.dumps(shap_values_json)  # Preparar la entrada del usuario

    chain = prompt | chat_model

    # Imprimir la respuesta
    response = chain.invoke(user_input)
    return response.content

# Example usage
response = generate_response("Vuori_Final_Approval_2024_09_24.json", "system.prompt")
print(response)