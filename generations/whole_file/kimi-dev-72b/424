from langchain_ollama import ChatOllama
from langchain_core.prompts.chat import ChatPromptTemplate
import json

def generate_response(shap_values_file, system_prompt_file, user_input, model="llama3.2", base_url="http://localhost:11434"):
    # Zainicjuj model ChatOllama
    chat_model = ChatOllama(model=model, base_url=base_url)
    # chat_model = ChatOllama(
    #     model="llama3.1:70b",
    #     base_url="http://ada-open-webui.serveo.net/ollama",
    #     client_kwargs={
    #         "headers": {"authorization": "Bearer <MASKED>"}
    #     },
    # )

    # Załaduj wartości SHAP z pliku JSON
    with open(shap_values_file, "r") as file:
        shap_values_json = json.load(file).get("shap_values")

    # Wczytaj systemowy prompt z pliku
    with open(system_prompt_file, "r") as file:
        sys_prompt = file.read().strip()

    # Przygotuj wiadomości
    prompt = ChatPromptTemplate(
        [
            ("system", sys_prompt),
            ("human", "{user_input}"),
        ]
    )

    # Generuj odpowiedź
    user_input = json.dumps(shap_values_json)  # Przygotuj dane wejściowe użytkownika

    chain = prompt | chat_model

    # Wydrukuj odpowiedź
    response = chain.invoke(user_input)
    return response.content

# Wywołanie funkcji
response = generate_response("Vuori_Final_Approval_2024_09_24.json", "system.prompt", "user_input")
print(response)