from pyspark.sql import SparkSession
from pyspark.sql.functions import col
import requests

# Crear una sesión Spark
spark = SparkSession.builder.appName("EscrituraParquetADL2").getOrCreate()

# Ejemplo de datos (reemplazar con tus datos reales)
data = [
    {"id": 1, "nombre": "Juan", "edad": 30},
    {"id": 2, "nombre": "Ana", "edad": 25},
    {"id": 3, "nombre": "Pedro", "edad": 40}
]

# Obtener datos de la API (ejemplo simulado)
# Nota: Reemplaza la URL con la de tu API
try:
    response = requests.get("https://api.example.com/data")
    response.raise_for_status()  # Verifica si hubo errores en la petición
    raw_data = response.json()
except Exception as e:
    print("Error al obtener datos de la API:", e)
    # Si hay error en la llamada, se usan los datos de ejemplo
    raw_data = data

# Analizar la estructura de los datos obtenidos
print("Tipo de datos recibidos:", type(raw_data))
if isinstance(raw_data, list) and raw_data:
    print("Ejemplo de registro:", raw_data[0])
elif isinstance(raw_data, dict):
    print("Claves en el diccionario:", list(raw_data.keys()))
else:
    print("Estructura de datos desconocida.")

# Crear un DataFrame a partir de los datos obtenidos
df = spark.createDataFrame(raw_data)

# Configurar la conexión a ADL2 usando la identidad de Microsoft ID
# No es necesario proporcionar credenciales explícitamente en un notebook de Synapse
# Spark utilizará la identidad administrada del notebook para autenticarse.

# Especificar la ruta al contenedor y la carpeta en ADL2
container_name = "<your_container_name>"  # Reemplazar con el nombre de tu contenedor
folder_path = "<your_folder_path>"  # Reemplazar con la ruta a la carpeta dentro del contenedor
adl2_path = f"abfss://{container_name}@{<your_storage_account_name>}.dfs.core.windows.net/{folder_path}"

# Escribir el DataFrame en formato parquet en ADL2
df.write.parquet(adl2_path, mode="overwrite")

# Opcional: leer el archivo parquet para verificar
df_leido = spark.read.parquet(adl2_path)
df_leido.show()

# Detener la sesión Spark
spark.stop()