from beem.discussions import Discussions, Query
from beem.comment import Comment

n_respuestas_minimas = 5
diccionario = {}

def procesar (texto: str):
    return "count me " in texto
def is_own_author (autor: str):
    return author == 'subidu'
def is_banned (autor: str):
    list_banned = []
    return autor in list_banned
def generar_permlink_unico () -> str:
    return "".join(random.choices(string.digits, k=10))
def procesar_replies (replies: Comment):
    pass
def preparar_comentario (parent_author: str, parent_permlink: str, permlink: str, title: str = '', author: str = 'subidu' , body: str = 'Count me in ^^ @subidu') -> dict[str:str]:
    return {
        "parent_author": parent_author,
        "parent_permlink": parent_permlink,
        "author": author,
        "permlink": permlink,
        "title": title,
        "body": body,
    }

def crear_diccionario_jerarquico(posts_generator):
    diccionario_jerarquico = {}
    for post in posts_generator:
        post_author = post['author']
        post_permlink = post['permlink']
        post_replies = post['children']
        if post_replies > n_respuestas_minimas:
            comment = Comment(authorperm=f"{post_author}/{post_permlink}")
            post_replies = comment.get_replies()
            diccionario_jerarquico[post_permlink] = {
                'author': post_author,
                'replies': []
            }
            for reply in post_replies:
                reply_author = reply['author']
                reply_body = reply['body']
                if not is_own_author(reply_author) and not is_banned(reply_author):
                    diccionario_jerarquico[post_permlink]['replies'].append({
                        'author': reply_author,
                        'body': reply_body
                    })
    return diccionario_jerarquico

q = Query()
d = Discussions()
posts_generator = d.get_discussions("created", q, limit=6000)
X = 0

diccionario_jerarquico = crear_diccionario_jerarquico(posts_generator)

for post_permlink, post_data in diccionario_jerarquico.items():
    post_author = post_data['author']
    post_replies = post_data['replies']
    cnt = 0
    X += 1
    for reply in post_replies:
        author = reply['author']
        text = reply['body']
        if is_own_author(author):
            # Reevaluar el comentario
            break
        if is_banned(author):
            break
        if procesar(text):
            cnt += 1
    if cnt > 3:
        print("Iterador: ", X)
        print(reply['author'], '/', reply['permlink'])