def can_be_sum_of_four_nonzero_squares(n):
    """
    Verifica se um número pode ser expresso como a soma de quatro quadrados não nulos.
    """
    # Para números pequenos, verificamos diretamente
    if n < 4:
        return False
    
    # Limite superior para os quadrados que precisamos verificar
    max_sqrt = int(n**0.5) + 1
    
    # Tentamos todas as combinações de quatro quadrados não nulos
    for a in range(1, max_sqrt):
        if a*a >= n:
            break
        for b in range(1, max_sqrt):
            if a*a + b*b >= n:
                break
            for c in range(1, max_sqrt):
                if a*a + b*b + c*c >= n:
                    break
                # Calculamos d² = n - a² - b² - c²
                d_squared = n - a*a - b*b - c*c
                if d_squared > 0:
                    d = int(d_squared**0.5)
                    if d*d == d_squared:
                        return True
    
    return False

def find_numbers_as_sum_of_four_squares(limit):
    """
    Encontra todos os números até 'limit' que podem ser expressos 
    como a soma de quatro quadrados não nulos.
    """
    result = []
    for num in range(1, limit + 1):
        if can_be_sum_of_four_nonzero_squares(num):
            result.append(num)
    return result

# Exemplo de uso
if __name__ == "__main__":
    limit = 50
    numbers = find_numbers_as_sum_of_four_squares(limit)
    print(f"Números de 1 a {limit} que podem ser expressos como soma de quatro quadrados não nulos:")
    print(numbers)
    
    # Verificação de alguns exemplos específicos
    test_numbers = [4, 10, 15, 30]
    for num in test_numbers:
        result = can_be_sum_of_four_nonzero_squares(num)
        print(f"{num}: {'Sim' if result else 'Não'}")