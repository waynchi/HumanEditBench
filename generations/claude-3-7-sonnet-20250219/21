from pathlib import Path

target_folder = 'F:/Maverick/desktop/Windows/temp/'

def get_content_delivery_path():
    """
    Get the path of Windows Content Delivery
    """
    path = Path('C:/Users/admin/AppData/Local/Packages/')
    matched = path.glob('*Microsoft.Windows.ContentDeliveryManager*')
    if result := next(matched):
        suffix = 'LocalState/Assets/'
        return result / suffix
    else:
        raise Exception('ContentDeliveryManager Not Found')
    

def jpeg(source_folder, target_folder):
    """
    Copy files from source folder to target folder and add .jpeg suffix
    """
    source_path = Path(source_folder)
    target_path = Path(target_folder)
    
    # Create target directory if it doesn't exist
    target_path.mkdir(parents=True, exist_ok=True)
    
    # Get all files from source folder
    files = source_path.glob('*')
    
    for file in files:
        if file.is_file():
            # Create target file path with .jpeg extension
            target_file = target_path / f"{file.name}.jpeg"
            
            # Copy file content
            with open(file, 'rb') as src_file:
                with open(target_file, 'wb') as tgt_file:
                    tgt_file.write(src_file.read())
            
            print(f"Copied {file.name} to {target_file}")


    
if __name__ == '__main__':
    source_folder = get_content_delivery_path()
    print(f"Windows Content Delivery path: {source_folder}")