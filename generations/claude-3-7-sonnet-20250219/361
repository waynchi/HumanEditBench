# Function to check if a number can be expressed as a sum of four non-zero squares
def is_sum_of_four_nonzero_squares(n):
    # We'll try all possible combinations of four non-zero squares that sum up to n
    for a in range(1, int(n**0.5) + 1):
        for b in range(1, int((n - a*a)**0.5) + 1):
            for c in range(1, int((n - a*a - b*b)**0.5) + 1):
                d_squared = n - a*a - b*b - c*c
                d = int(d_squared**0.5)
                if d > 0 and d*d == d_squared:
                    return True, (a, b, c, d)
    return False, None

# Find and print numbers up to a limit that can be expressed as a sum of four non-zero squares
def find_numbers_as_sum_of_four_squares(limit):
    results = []
    for num in range(4, limit + 1):
        is_sum, squares = is_sum_of_four_nonzero_squares(num)
        if is_sum:
            results.append((num, squares))
    return results

# Test the function
limit = 100  # You can change this limit
results = find_numbers_as_sum_of_four_squares(limit)

# Print the results
print(f"Numbers up to {limit} that can be expressed as a sum of four non-zero squares:")
for num, squares in results:
    a, b, c, d = squares
    print(f"{num} = {a}² + {b}² + {c}² + {d}² = {a*a} + {b*b} + {c*c} + {d*d}")