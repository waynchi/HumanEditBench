from pyspark.sql import SparkSession
from pyspark.sql.functions import col

# Utwórz sesję Spark
spark = SparkSession.builder.appName("EscrituraParquetADL2").getOrCreate()

# Przykład danych (zastąp swoimi rzeczywistymi danymi)
data = [
    {"id": 1, "nombre": "Juan", "edad": 30},
    {"id": 2, "nombre": "Ana", "edad": 25},
    {"id": 3, "nombre": "Pedro", "edad": 40}
]

# Utwórz DataFrame z danych
# Analiza danych przychodzących z API
try:
    # Próba utworzenia DataFrame z danych API
    df = spark.createDataFrame(data)
    
    # Podstawowa analiza danych
    print("Schemat danych:")
    df.printSchema()
    
    print("Próbka danych:")
    df.show(5)
    
    print("Statystyki liczbowe:")
    df.describe().show()
    
    print("Liczba wierszy:", df.count())
    print("Liczba kolumn:", len(df.columns))
    
    # Sprawdzenie wartości null
    for column in df.columns:
        null_count = df.filter(col(column).isNull()).count()
        print(f"Kolumna '{column}' zawiera {null_count} wartości null")
    
except Exception as e:
    print(f"Błąd podczas analizy danych: {str(e)}")
    # Utworzenie pustego DataFrame jako zabezpieczenie
    df = spark.createDataFrame([], schema="id INT, nombre STRING, edad INT")

# Skonfiguruj połączenie z ADL2 używając tożsamości Microsoft ID
# Nie jest konieczne podawanie poświadczeń jawnie w notebooku Synapse
# Spark użyje zarządzanej tożsamości notebooka do uwierzytelniania.

# Określ ścieżkę do kontenera i folderu w ADL2
container_name = "<your_container_name>"  # Zastąp nazwą swojego kontenera
folder_path = "<your_folder_path>"  # Zastąp ścieżką do folderu w kontenerze
adl2_path = f"abfss://{container_name}@{<your_storage_account_name>}.dfs.core.windows.net/{folder_path}"

# Zapisać DataFrame w formacie parquet w ADL2
df.write.parquet(adl2_path, mode="overwrite")

# Opcjonalnie: odczytać plik parquet w celu weryfikacji
df_leido = spark.read.parquet(adl2_path)
df_leido.show()

# Zatrzymać sesję Spark
spark.stop()