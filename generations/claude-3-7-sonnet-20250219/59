class SimpleConvNet1(nn.Module):
    def __init__(self):  # Удалил аргумент flattened_size
        super().__init__()

        self.conv1 = nn.Sequential(
            nn.Conv2d(3, 32, 3),
            nn.ReLU(),
            nn.MaxPool2d(2)
        )

        self.conv2 = nn.Sequential(
            nn.Conv2d(32, 64, 3),
            nn.ReLU(),
            nn.MaxPool2d(2)
        )

        self.flatten = nn.Flatten()
        # Рассчитаем размер входа для полносвязного слоя динамически
        # Предполагаем, что входное изображение имеет размер 32x32
        # После двух сверток (3x3) и пулингов (2x2) размер будет 6x6x64
        self.fc1 = nn.Sequential(
            nn.Linear(64 * 6 * 6, 512),
            nn.ReLU(),
            nn.Linear(512, 3)
        )

    def forward(self, x):
        x = self.conv1(x)
        x = self.conv2(x)
        x = self.flatten(x)
        x = self.fc1(x)
        return x