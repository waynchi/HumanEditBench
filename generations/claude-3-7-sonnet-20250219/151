import numpy as np

INPUT_FILE_PATH = './input.txt'
INPUT_FILE_PATH = './example_in.txt'

def main():
    lines = parse_input_file()
    # Filter out empty lines
    lines = [line for line in lines if line.strip()]
    
    # More robust splitting - handles different spacing
    cols = []
    for line in lines:
        # Split by any number of spaces
        values = [int(val) for val in line.split() if val]
        cols.append(values)
    
    # Convert to numpy array and transpose
    cols = np.array(cols).T
    
    # Check if we have at least 2 columns
    if cols.shape[0] < 2:
        print("Error: Input data must have at least 2 columns")
        return
    
    list_1 = list(cols[0])
    list_2 = list(cols[1])
    
    # Sort both lists first for better approach
    list_1.sort()
    list_2.sort()
    
    # Calculate absolute differences
    all_dists = [abs(a - b) for a, b in zip(list_1, list_2)]
    
    # Print result
    print(f"Total sum of distances: {sum(all_dists)}")

def parse_input_file():
    with open(INPUT_FILE_PATH, 'r') as f:
        lines = f.read().split("\n")
    return lines

if __name__ == "__main__":
    main()