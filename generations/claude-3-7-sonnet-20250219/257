#
# @lc app=leetcode id=2379 lang=python3
#
# [2379] Минимальное количество перекрашиваний для получения K последовательных черных блоков
#
# https://leetcode.com/problems/minimum-recolors-to-get-k-consecutive-black-blocks/description/
#
# алгоритмы
# Легко (59.47%)
# Нравится: 751
# Не нравится: 21
# Всего принято: 61.3K
# Общее количество отправленных решений: 103K
# Пример тестового случая: '"WBBWWBBWBW"\n7
#
# Вам дана строка blocks длины n с индексами, начиная с 0, где blocks[i] это
# либо 'W', либо 'B', представляя цвет i-го блока. Символы
# W' и 'B' обозначают цвета белый и черный соответственно.
# 
# Вам также дано целое число k, которое является желаемым количеством последовательных
# черных блоков.
# 
# За одну операцию можно перекрасить белый блок так, чтобы он стал черным
# блок.
# 
# Вернуть минимальное количество операций, необходимых для того, чтобы было хотя бы
# один случай k последовательных черных блоков.
# 
# 
# Пример 1:
# 
# 
# Ввод: blocks = "WBBWWBBWBW", k = 7
# Вывод: 3
# Объяснение:
# Один из способов получить 7 последовательных черных блоков - перекрасить 0-й, 3-й и
# 4-й блок
# так что blocks = "BBBBBBBWBW".
# Можно показать, что нет способа получить 7 последовательных черных блоков в
# менее чем за 3 операции.
# Поэтому мы возвращаем 3.
# 
# 
# Пример 2:
# 
# 
# Ввод: blocks = "WBWBBBW", k = 2
# Вывод: 0
# Объяснение:
# Изменения не требуются, так как уже существуют 2 последовательных черных блока.
# Поэтому возвращаем 0.
# 
# 
# 
# Ограничения:
# 
# 
# n == длина blocks
# 1 <= n <= 100
# blocks[i] является либо 'W', либо 'B'.
# 1 <= k <= n
# 
# 
#

# # @lc код=начало
class Solution:
    def minimumRecolors(self, blocks: str, k: int) -> int:
        min_operations = float('inf')
        
        # Используем технику скользящего окна для проверки каждого возможного подотрезка длины k
        for i in range(len(blocks) - k + 1):
            # Считаем количество белых блоков в текущем окне
            white_count = 0
            for j in range(i, i + k):
                if blocks[j] == 'W':
                    white_count += 1
            
            # Минимальное количество операций равно количеству белых блоков,
            # которые нужно перекрасить
            min_operations = min(min_operations, white_count)
            
            # Если уже нашли окно, где не нужно перекрашивать блоки, можно вернуть 0
            if min_operations == 0:
                return 0
                
        return min_operations
# @lc code=end
