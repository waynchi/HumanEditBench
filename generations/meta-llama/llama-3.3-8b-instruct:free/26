import numpy as np

def conjugate_gradient_method(A, b, x0, tol=1e-8, max_iter=1000):
    r = b - np.dot(A, x0)
    p = r
    r0 = np.linalg.norm(r)
    for i in range(max_iter):
        Ap = np.dot(A, p)
        alpha = r0**2 / np.dot(p, Ap)
        x0 = x0 + alpha * p
        r = r - alpha * Ap
        r0 = np.linalg.norm(r)
        if r0 < tol:
            break
        p = r + (np.dot(r, r) / np.dot(r, r - Ap)) * p
    return x0