from main13 import knn, mlp
import pandas as pd
import itertools

# generate all possible combinations of pclass, fare, and embarked
pclasses = [1, 2, 3]
fares = range(10, 200, 10)
embarkeds = ["S", "Q", "C"]
combinations = list(itertools.product(pclasses, fares, embarkeds))

for combination in combinations:
    pclass, fare, embarked = combination
    my_df = pd.DataFrame({"Pclass": [pclass],
                        "Name": [24],
                        "Sex": [0],
                        "Age": [19],
                        "SibSp": [0],
                        "Parch": [0],
                        "Fare": [fare],
                        "Embarked": [embarked]
                        })
    my_df = pd.get_dummies(my_df, columns=["Embarked"], prefix="Embarked") # doing one-hot
    if "Embarked_S" in my_df.columns:
        my_df["Embarked_S"] = my_df["Embarked_S"].map({True: 1, False: 0})
    if "Embarked_C" in my_df.columns:
        my_df["Embarked_C"] = my_df["Embarked_C"].map({True: 1, False: 0})
    if "Embarked_Q" in my_df.columns:
        my_df["Embarked_Q"] = my_df["Embarked_Q"].map({True: 1, False: 0})

    print(f"""-------------------------------------------------------
                  Параметры: класс {pclass}, плата {fare}, embarked {embarked}
                  По knn: {knn.predict(my_df)}
                  По mlp: {mlp.predict(my_df)}""")