from langchain_ollama import ChatOllama
from langchain_core.prompts.chat import ChatPromptTemplate
import json

def generate_response():
    # Initialize the ChatOllama model
    chat_model = ChatOllama(model="llama3.2", base_url="http://localhost:11434")
    # chat_model = ChatOllama(
    #     model="llama3.1:70b",
    #     base_url="http://ada-open-webui.serveo.net/ollama",
    #     client_kwargs={
    #         "headers": {"authorization": "Bearer sk-6bd5a066223a49aea878d1970aff4485"}
    #     },
    # )

    # Load SHAP values from JSON file
    with open("Vuori_Final_Approval_2024_09_24.json", "r") as file:
        shap_values_json = json.load(file).get("shap_values")

    # Load system prompt from file
    with open("system.prompt", "r") as file:
        sys_prompt = file.read().strip()

    # Prepare the messages
    prompt = ChatPromptTemplate(
        [
            ("system", sys_prompt),
            ("human", "{user_input}"),
        ]
    )

    # Generate the response
    user_input = json.dumps(shap_values_json)  # Prepare user input

    chain = prompt | chat_model

    # Print the response
    response = chain.invoke(user_input)
    return response

# Inicializar el modelo ChatOllama
chat_model = ChatOllama(model="llama3.2", base_url="http://localhost:11434")
# chat_model = ChatOllama(
#     modelo="llama3.1:70b",
#     base_url="http://ada-open-webui.serveo.net/ollama",
#     client_kwargs={
#         "headers": {"authorization": "Bearer <OCULTO>"}
#     },
# )

# Cargar valores SHAP desde archivo JSON
with open("Vuori_Final_Approval_2024_09_24.json", "r") as file:
    shap_values_json = json.load(file).get("shap_values")

# Cargar el mensaje del sistema desde el archivo
with open("system.prompt", "r") as file:
    sys_prompt = file.read().strip()

# Prepara los mensajes
prompt = ChatPromptTemplate(
    [
        ("system", sys_prompt),
        ("human", "{user_input}"),
    ]
)

# Generar la respuesta
user_input = json.dumps(shap_values_json)  # Preparar la entrada del usuario

chain = prompt | chat_model

# Imprimir la respuesta
print(generate_response().content)